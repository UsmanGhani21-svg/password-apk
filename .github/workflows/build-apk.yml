# name: Build Python APK with Buildozer

# on:
#   push:
#     branches: [ main ]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     timeout-minutes: 120

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.10"

#       - name: Install apt packages
#         run: |
#           sudo apt update
#           # basic build tools often required by python-for-android / buildozer
#           sudo apt install -y build-essential git zlib1g-dev libncurses5-dev \
#             libssl-dev libsqlite3-dev libffi-dev liblzma-dev libbz2-dev \
#             openjdk-17-jdk unzip zip

#       - name: Install pip packages
#         run: |
#           python -m pip install --upgrade pip setuptools wheel
#           # install Cython (often required), and Buildozer
#           pip install cython
#           pip install buildozer==1.5.0

#       - name: Ensure buildozer.spec exists
#         run: |
#           if [ ! -f buildozer.spec ]; then
#             echo "ERROR: buildozer.spec not found in repo. Commit buildozer.spec and push." >&2
#             exit 1
#           fi

#       - name: Build APK (debug)
#         run: |
#           # Run buildozer build (this will download Android SDK/NDK etc. on first run)
#           buildozer -v android debug

#       - name: List possible APK output locations
#         run: |
#           echo "Artifacts in bin/:"
#           ls -la bin || true
#           echo "Artifacts in platforms/ (if present):"
#           ls -la platforms || true

#       - name: Upload APK artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: password-time-apk
#           # try to catch APKs from either location
#           path: |
#             bin/*.apk
#             platforms/android/app/build/outputs/apk/**/*.apk
#             platforms/*/build/outputs/apk/**/*.apk
name: Build Python APK with Buildozer

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y openjdk-17-jdk unzip zip libffi-dev git wget
          pip install --upgrade pip
          pip install buildozer==1.5.0

      - name: Install Android SDK and Build Tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O tools.zip
          unzip tools.zip -d latest
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk --licenses
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk "platform-tools" "build-tools;34.0.0" "platforms;android-34"

      - name: Build APK
        run: |
          export ANDROIDSDK=$HOME/android-sdk
          export ANDROIDNDK=$HOME/android-sdk/ndk
          buildozer init || true
          buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: password-time-apk
          path: bin/*.apk

